const { includes, toLower } = require("lodash");

const fintQuestion = async (req, res) => {
  const data = [
    "Statik modellashtirishning asosiy maqsadi nima?\n  a) Dasturiy tizimning ishlab chiqarish jarayonini boshqarish \n  b) Xato va hatolarni aniqlash\n  c) Kodning barqarorligini va kafolatlilikni ta'minlash\n  d) Dasturiy tizimning ish faoliyatini ta'lim qilish\n",
    "Statik modellashtirishni amalga oshirish uchun qaysi vositalardan foydalanilishi mumkin?\n  a) Testlarni o'tkazish uchun avtomatlashtirish vositalari \n  b) Dasturiy tizimning qurilmaviy vositalari\n  c) Qo'llanma va dokumentatsiya\n  d) Barcha yuqorida keltirilganlar",
    ". Statik modellashtirishning muhim xususiyatlari nimalardir?\n  a) Xatolar va hatolarni aniqlash imkoniyati \n  b) Dasturiy tizimning ish faoliyatini optimallashtirish\n  c) Dasturiy tizimning xavfsizligini ta'minlash\n  d) Barcha yuqorida keltirilganlar",
    "Statik modellashtirish va dinamik modellashtirish o'rtasidagi asosiy farq nima?\n  a) Statik modellashtirish faqat dasturiy tizimning yodgorligini tekshiradi, dinamik modellashtirish esa barcha tizimning ish faoliyatini boshqaradi.\n  b) Statik modellashtirish faqat kodning sintaksisini tekshiradi, dinamik modellashtirish esa ish vaqti davomida sodir bo'ladigan xatolarni aniqlaydi.\n  c) Statik modellashtirish faqat kodni ishga tushirishdan oldin xatolarni aniqlaydi, dinamik modellashtirish esa ish vaqti davomida xatolar tizimini yig'ib o'tkazadi.\n  d) Statik modellashtirish va dinamik modellashtirish o'rtasida asosiy farq yo'q.\n",
    " Sinf diagrammasi qanday maqsadga xizmat qiladi?\n  a) Dasturiy tizimning tarkibiy qismalarini tasvirlashga\n  b) Dasturiy tizimning ishlash jarayonini tasvir qilish\n  c) Dasturiy tizimning yangi funktsiyalarini identifikatsiya qilish\n  d) Dasturiy tizimning yuklanishi va ishlashini tasvir qilish\n",
    "\n  7. Sinf diagrammasi tuzishning asosiy maqsadi nima?\n     a) Dasturiy tizimning barcha funktsiyalarini aniqlash \n     b) Sinf strukturasi va aloqalarini namoyish etish\n     c) Dasturiy tizimning barcha dasturlarini testlash\n     d) Dasturiy tizimning ishlash jarayonini loyihalash",
    "Sinf diagrammasida iste'mol qilingan modellar to'plami nima deb ataladi?\n  a) Qo'shimcha funksiyalar \n  b) Sinfxonalar\n  c) Sinflar\n  d) Interfeyslar\n",
    ". Sinf diagrammasida qaysi element sinfning xususiyatlarini ko'rsatadi?\n  a) Sinflar orqali yaratilgan obyektlar \n  b) Sinf ovlari\n  c) Sinflar orqali yaratilgan metodlar\n  d) Sinflar orqali yaratilgan aloqalar",
    ". Sinf diagrammasida obyekt yaratishni ko'rsatadigan element nima?\n  a) Biznes toifa \n  b) Yaratuvchi",
    "11.UML lug'ati tarkibiga nechi turdagi bloklar kiradi:\n  A. 3",
    "12.UML lug'ati tarkibiga kiruvchi bloklarni togri korsatilgan qatorni korsatin:\n  A.Hama javob to‘g‘ri.",
    "13.Sub'ektlar  - bu …\n  A.Modelning asosiy elementlari bo'lgan abstraktlar,  munosabatlar  ularni bir-biriga bog'lab turadi  qiziqtirgan sub'ektlar guruhlari diagrammalaridir .\n  Ko'pincha vertikallar (ob'ektlar) va yo'llar (bog'lanishlar) ning bo",
    "14.Qaysi yagona modellashtirish tili, ob'ektga yo'naltirilgan tahlil qilish va loyihalash uchun ishlatilishi mumkin bo'lgan yozuvlar tizimi.\n  A.UML.",
    "15.Diagramma – bu\n  A.Ko'pincha vertikallar (ob'ektlar) va yo'llar (bog'lanishlar) ning bog'langan grafigi sifatida tasvirlangan elementlar to'plamining grafik tasviri.\n  Mo",
    "16.Sinf diagrammalari nechi turdagi UML ob'ektlarida ishlaydi:\n  A.3\n  B.6",
    "17.Sinf diagrammalari qanday UML ob'ektlarida ishlaydi:\n  A.Hama javob to‘g‘ri.\n  B.Tizimli.\n  Xulq-atvorl",
    "18.UML tili nechi  turdagi diagrammalarnio'z ichiga.\n  A.13",
    "19.UML-da nech xil munosabatlar mavjud:\n  A.4\n  B.9\n  C.11",
    "20.UML-da to'rt xil munosabatlar mavjud ularni sanab berin:\n  A.Hama javob to‘g‘ri.\n  B.Qaramlik, Assotsiatsiya.\n  C.Umumlashtirish.",
    "21. Qaysi arxitektura Mijoz-server arxitekturasi bo'lib , unda taqdimot, ilovalarni qayta ishlash va ma'lumotlarni boshqarish funktsiyalari jismoniy jihatdan ajratilga bo’ladi?\n  a) ko'p darajali arxitektura",
    " \n  22. Qaysi arxitektura ishlab chiquvchilar moslashuvchan va qayta foydalanish mumkin bo'lgan ilovalarni yaratishi modelni taqdim etadi?\n  a) N-darajali ilovalar arxitekturasi\n  b) p2p arxitektura",
    "23. Ob'ektga yo'naltirilgan dizaynga ega axborot tizimi uchun mantiqiy ko'p qatlamli arxitekturada eng keng tarqalgan turlari nechta? \n  a) 4ta\n  b) 3ta",
    "24. Taqsimlangan tarmoqdagi uch yoki undan ortiq alohida kompyuterlar orasida taqsimlangan dastur?\n  a) N -Tier Application \n  b) n-darajali arxitektur",
    "\n  25.  Sanoat tomonidan tasdiqlangan dasturiy ta'minot arxitekturasi modeli?\n  a) n-darajali arxitektura  \n  b) p2p arxitektura\n  c) MVC arxitektura ",
    "26. N-darajali arxitektura nechi toifaga bo’linadi?\n  a) 3   ",
    "\n  27. Qaysi tarmoq arxitekturasida tarmoq kompyuterlarida joylashgan komponentlar o'z harakatlarini faqat xabarlarni uzatish orqali muvofiqlashtiradi va bog'laydi?\n  a) Tarqalgan tarmoq ",
    "28. Mijoz serverdan xizmat so'raydigan arxitektura modeli, ya'ni  internet yoki internet orqali taqdim etiladigan so'rov-javob xizmati qaysi arxitektura hisoblanadi?\n  a) Mijoz-server arxitekturasi\n  b) Mikroservis arxitektura\n  c) Ma'lumotlar bazasi ",
    "29. Ma'lumotlarga oson kirish, boshqarish va yangilash uchun tashkil etilgan ma'lumotlar to'plami?\n  a) Ma'lumotlar bazasi \n  b) Arxitektura",
    "30. 3 darajali arxitekturaning qatlamlari?\n  a) Taqdimot qatlami, Biznes mantiqiy qatlami, Ma'lumotlar bazasi qatlami\n  b) Taqdimot qatlami, Platforma qatlami, Tarqalgan tarmoq \n  c) Platforma qatlami, Biznes mantiqiy qatlami",
    "31. Amaliy qatlamdan ma'lumotlarni qabul qiladigan va ma'lumotlar qatlamiga o'tkazadigan biznes darajasining qatlami?\n  a) Biznesga kirish qatlami\n  b) Taqdimot qatlami",
    "32. Broker pattern jarayonida  klent va server o'rtasidagi aloqaga  qanday o'xshatish mos keladi ?\n  a)klent server o'rtasidagi ofitsantga mos keladi\n  b)klent server o'rtasidagi klent roliga mos ",
    "33. Oxirgi iste'mol uchun xabarlarni saqlash uchun ma'lumotlar strukturasini tavsiflash shakli nima ?\n  a)xabar navbati",
    "34. Xabarlar navbati qanday turdagi navbat ?\n  a)fifo",
    "36. Ikki yoki undan ortiq aloqalarni osonlashtirish uchun yordam beradigan pattern\n  a) broker pattern\n  b)pipe pattern\n  c)client-side \n  d)pipe-filter pattern\n  37. Serverlar va ular taqdim etadigan individual xizmatlar haqida batafsil ma'lumotga ega pattern turi\n  a)broker pattern",
    "38. Tarifga mos keladigan tushunchani toping  \"mijozlar va serverlar o'rtasidagi so'rovlar va javoblarni muvofiqlashtiradi\"\n  a)broker komponenti\n  b)broker pattern\n  c)client server aloqasi\n  d)server\n  39. \"ajratilgan komponentlar bilan taqsimlangan dasturiy ta'minot tizimlarini tuzish uchun ishlatiladi\"  tushunchaga mos keladigan atamani ko'rsating\n  a)broker namunasi\n  b)broker komponenti",
    "40. broker pattern dan foydalanishda client va server bir biri bilan qanday aloqada bo'ladi\n  a)broker orqali aloqa qiladi va bir birini tanlay olmaydi\n  b)to'g'ridan to'g'ri aloqa qiladi bir birini tanlay oladi\n  c)broker orqali  aloqa qiladi va bir birini tanlay oladi\n  d)to'g'ridan to'g'ri aloqa qiladi va bir birini tanlay olmaydi\n   \n  41. Broker pattern kamchiliklari to'g'ri ko'rsatilgan javobni ko'rsating\n  a)b va c javoblar to'g'ri\n  b)Muloqot yanada murakkabroq ,Proksi-ser",
    '42.Dasturiy taminot aritekturasining asosiy maqsadi nima?\n  A. Server yukini azaytirish \n  43.Dasturiy taminot aritekturasida qaysi prinsip "Loose Coupling" ga misol bo\'lishi mumkin?\n  A. Interface Segregation ',
    "44.MVC aritektura modeli nima?\n  A. Model-View-Controller \n  45.Layered Architecture da nechta qatlamlar mavjud?\n  A. 3",
    "46.Domain-Driven Design (DDD) nima?\n  A. Biznes loyihasi asosida dasturiy taminotni ishlab chiqish\n  47.Microservices aritekturasi qanday yechimlar uchun mos keladi?\n  A. Kichik va o'ta oson loyihalar\n  48.RESTful API nima?\n  A. Veb-saytlar uchun interfeys ",
    "49.Event-Driven Architecture da qanday tizim elementlari mavjud?\n  A. Event, Publisher, Subscriber\n  50.CQRS nima?\n  A. Command Query Responsibility Segregation\n  51.Monolithic Architecture ning afzalliklari qandaydir?\n  A. Ishlab chiqishni tezlashtirish \n  52.Reactive systems qanday xususiyatlarga ega?\n  A. Responsive, Resilient, Elastic, Message-driven",
    "53.SOLID prinsiplari nima?\n  A. Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion\n  54.Hexagonal Architecture da qanday tuzilmalar mavjud?\n  A. Ports, Adapters, Drivers \n  55.Clean Architecture da nechta qatlamlar mavjud?\n  A. 4\n  56.Containerization nima?\n  A. Dasturlarning izolatsiya va portativlikni ta'minlash \n  \n  57.Dasturiy ta'minot tizimini ishlab chiqarishga qaratilgan harakatlar to'plami nima deyiladi?\n  A)Dasturiy ta'minot jarayoni; ",
    "58. Dasturiy ta'minotni ishlab chiqishning modeli necha turga bo’linadi?\n  A) 4ta modelga bo’linadi;\n  59. Dasturiy ta’minot ishlab chiqishning birinchi modeli qaysi variantda to’g’ri ko’rsatilgan?\n  A) Sharshara modeli;  ",
    "60. Dasturiy ta’minot ishlab chiqishning ikkinchi modeli qaysi variantda to’g’ri ko’rsatilgan?\n  A) Incremental (bosqichma-bosqich) rivojlanish; \n  61. Dasturiy ta’minot ishlab chiqishning ikkinchi modeli qaysi variantda to’g’ri ko’rsatilgan?\n  A) Sharshara modeli;     \n  62. Qaysi turdagi dasturiy ta'minot komponentlari tez-tez qayta foydalaniladi?\n  A) Barcha javobllar to’g’ri",
    "63. ….. bu dasturiy ta'minot tizimini aniqlash, loyihalash, amalga oshirish va sinovdan o'tkazishdan iborat bo'lgan umumiy maqsadli texnik, hamkorlik va boshqaruv faoliyatining ketma-ketligidan iborat.\n  A) Amaliy dasturiy ta'minot jarayonlari;  ",
    "64. Sharshara modelining bosqichlari qaysilar?\n  A) A va D javoblar to’g’ri; ",
    "65. …. bu tizimdan qanday xizmatlar talab qilinishini tushunish va aniqlash hamda tizimning ishlashi va rivojlanishidagi cheklovlarni aniqlash jarayonidir.\n  A) Dasturiy ta'minot spetsifikatsiyasi;  ",
    "66.  Dasturiy ta'minotni loyihalash – bu ….?\n  A)  Yaratiladigan dasturiy ta'minotning tuzilishi,",
    "67. Mikrosevice nima ?\n  A. Mikro-xizmatlar, bir tizimdagi ilova funktsiyalarini birlashtirgan va o'zaro ",
    "68. Monolitik arxitektura  nima  uchun ishlatiladi?\n  A. Bu arxitektura o'zida ilovaning barcha qismlarini (komponentlarini) va ",
    "69.Mikroservicelar qanday aloqalar bilan bog'liq?\n  A. Barcha javoblar to’g’ri. ",
    "70.Mikroservicelar va monolitik ilovalar o'rtasidagi farq nima?\n  A. Monolitik barcha funktsiyalarni birlikda joylashadi va modifikatsiyalarni va skalalashni qiyinchilikka tortadi, MicroService ",
    "1. Ob'ektlarni daraxt strukturasiga joylashtirish uchun qanday dasturlash shablonidan foydalaniladi?\n  a) bog'lovchi",
    "2. Qaytarilishi yoki qayta bajarilishi mumkin bo'lgan amallar ketma-ketligini tasvirlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) Surat",
    "3. Kompozit ob'ektning ichki tuzilishini oshkor qilmasdan uning elementlariga ketma-ket kirish usulini ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) quruvchi",
    "4. Ob'ektga uning usullariga kirishni boshqarish uchun interfeysni ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) deputat",
    "5. Funksiyani muqobil amalga oshirilishini ta'minlash uchun qanday dasturlash shabloni qo'llaniladi?\n  a) prototip\n \n6. Muayyan hodisa yoki harakatlar bo'yicha bir ob'ektdan ikkinchisiga qayta qo'ng'iroq qilishni ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) kuzatuvchi\n\n7. Algoritmlar oilasini alohida sinflar sifatida aniqlash va ularning har birini inkapsulyatsiya qilish uchun qanday dasturlash shablonidan foydalaniladi?\n  a) strategiya\n8. Algoritmlar oilasini aniqlash va ularning har birini alohida sinfga joylashtirish uchun qanday dasturlash shablonidan foydalaniladi?\n  a) strategiy",
    "9. Ob'ektning sinfini o'zgartirmasdan unga yangi xatti-harakatlar qo'shish usulini ta'minlash uchun qanday dasturlash shabloni qo'llaniladi?\n  a) dekorativ\n \n10. Tizimning turli qismlarini yagona interfeys bilan ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n   a) quruvchi\n  \n11. Ob'ektlar zanjiri bo'yicha so'rovlarni ulardan biri so'rovni qayta ishlamaguncha ketma-ket ishlash uchun qanday dasturlash shablonidan foydalaniladi?\n   a) kuzatuvchi\n12. Murakkab quyi tizimga kirish nuqtasi bo'lgan ob'ektni yaratish uchun qanday dasturlash shablonidan foydalaniladi?\n   a) adapter\n   ",
    "13. O'zaro bog'liq ob'ektlar oilasini ularning maxsus sinflariga bog'lanmagan holda ta'minlash uchun qanday dasturlash shabloni qo'llaniladi?\n  a) fabrikasi usuli\n14. To'plam elementlarini uning ichki tuzilishini ko'rsatmasdan takrorlash mexanizmini ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) prototip\n15. Tezda yangi ishlov beruvchilarni qo'shish imkoniyatiga ega bo'lgan so'rovlarni qayta ishlash tizimini yaratish uchun qanday dasturlash shablonidan foydalaniladi?\n  a) kuzatuvchi (observer)\n16. Berilgan dastlabki qiymatlar bilan ob'ektlarni yaratish usulini ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) strategiya",
    "17. Algoritmlar turkumini ularning almashinish imkoniyati bilan aniqlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) Abstrakt fabrikasii\n\n18. Tezda ob'ektga yangi xatti-harakatlar yoki holat qo'shish usulini ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) dekorativ\n\n19. O'xshash ob'ektlar guruhini yagona interfeys bilan ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) # bog'lovchi\n20. Ob'ektlarni yaratish, ularning aniq sinflarini yashirish va ular bilan o'zaro ta'sir qilishni osonlashtirish uchun moslashuvchanlikni ta'minlash uchun qanday dasturlash shabloni qo'llaniladi?\n  a) fabrikasi usuli",
    "21. O'zaro almashinish imkoniyati bilan bog'liq algoritmlar turkumini aniqlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) Abstrakt fabrikasii\n22. Kichik sinflar bo'yicha o'zgartirilishi mumkin bo'lgan ob'ektlarni yaratish usulini ta'minlash uchun qanday dasturlash shabloni qo'llaniladi?\n  a) quruvchi\n23. Ob'ektlarga sinflarini o'zgartirmagan holda yangi xususiyatlar qo'shish usulini ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) # Dekorator\n \n24. O'xshash funksiyaga ega bo'lgan har xil turdagi ob'ektlarni yagona interfeys bilan ta'minlash uchun qanday dasturlash shablonidan foydalaniladi?\n  a) adapter\n\n25. O‘zaro bog‘liq algoritmlar turkumini aniqlash va ularning har birini alohida sinfga inkapsulyat",
    "96. Serversiz hisoblash patternining asosiy maqsadi nima?\n  A) Server infratuzilmasiga bo'lgan ehtiyojni bartaraf etish uchun.\n  97. Adaptiv arxitektura patternining maqsadi nima?\n  A) Tizimlar nosozliklar yoki uzilishlar sodir bo'lganda ishlashini ta'minlash.\n  98.  Qaysi dasturiy ta'minot arxitektura patterni modulli va \"plug-and-play\" yondashuvi orqali dasturiy ta'minot komponentlarini qayta ishlatish imkonini beradi?\n  A) Komponentga asoslangan arxitektura",
    "99. Dasturiy ta'minot arxitekturasida Repository patternining maqsadi nima?\n  A) Ma'lumotlarga kirish operatsiyalari uchun markazlashtirilgan saqlashni ta'minlaydi.\n  100. Qaysi arxitektura patterni dasturiy ta'minot komponentlari o'rtasidagi bog'liqlikni minimallashtirishga qaratilgan?\n  A) Bo'shashgan ulanish\n  101. Mijoz-server arxitekturasida mijoz odatda qanday rol o'ynaydi?\n  A) Xizmatlar yoki resurslar uchun so'rovlarni boshlaydi.\n  102. Qaysi dasturiy ta'minot arxitekturasi o'zining miqyosi, nosozliklarga chidamliligi va yuqori mavjudligi bilan mashhur?\n  A) Bulutli mahalliy arxitektura",
    "103. Model-View-Controller (MVC) arxitekturasining asosiy maqsadi nima?\n  A) komponentlarni ajratilishi va komponentlarning qayta ishlatilishi.\n  104. Qaysi dasturiy ta'minot arxitektura patterni foydalanuvchi interfeyslarini biznes mantiqiy va ma'lumotlarga kirish qatlamlaridan ajratish imkonini beradi?\n  A) Model-View-Controller (MVC)\n  105. Qaysi dasturiy ta'minot arxitektura patterni ilovani mustaqil ravishda ishlab chiqilishi va sinab ko'rilishi mumkin bo'lgan komponentlarga ajratadi?\n  A) Mikroservislar arxitekturasi\n  106. Dasturiy ta'minot arxitekturasi nima?\n  A) Dasturiy ta'minot tizimining tuzilishi va tashkil etilishi.",
    "\n  107. Qaysi dasturiy ta'minot arxitektura modeli kichik, tez-tez yangilanishlar orqali dasturiy ta'minotni uzluksiz yetkazib berish va joylashtirish imkonini beradi?\n    A) Uzluksiz integratsiya/uzluksiz joylashtirish (CI/CD)\n  108. Docker kabi konteynerlashtirish arxitekturasining asosiy maqsadi nima?\n  A) Dasturiy ta'minot ilovalarini ularning portativlikka bog'liqligi bilan qadoqlash.\n  109. Tarqalgan tizimda qaysi dasturiy ta'minot arxitektura patterni ma'lumotlarni bir nechta serverlar bo'ylab takrorlash orqali xatolarga chidamlilik va ortiqchalikni ta'minlaydi?\n  A) Replikatsiya arxitekturasi\n  110. Qaysi dasturiy ta'minot arxitektura patterni standartlashtirilgan interfeyslar orqali turli tizimlarni uzluksiz integratsiyalashuviga imkon beradi?\n  A) Xizmatga yo'naltirilgan arxitektura (SOA)\n  111. Dasturiy ta'minot arxitekturasida dasturiy ta'minot dizayni patternining maqsadi nima?\n   A) Takroriy dizayn muammolari uchun tasdiqlangan echimlarni taqdim etadi.",
    "112. Qaysi dasturiy ta'minot arxitektura patterni katta hajmdagi ma'lumotlarni bir nechta serverlar bo'ylab tarqatish orqali ishlov berish uchun mo'ljallangan?\n  A) Big data arxitekturasi\n113. Serversiz arxitekturaning asosiy afzalligi nimada?\n A) Serverni boshqarish va miqyoslash bilan bog'liq muammolarni bartaraf etish.\n.\n114. Qaysi dasturiy ta'minot arxitekturasi aniq belgilangan interfeyslarni ta'sir qilish orqali funksionallikni almashish va qayta foydalanish imkonini beradi?\n A) Service Oriented arxitekturasi (SOA)\n \n115. Qatlamli arxitekturaning asosiy maqsadi nima?\n  A) Xavotirlarni ajratish va modullik.\n116. Qaysi dasturiy ta'minot arxitektura patterni voqealar va xabarlarni qayta ishlash va ularga munosabat bildirishga qaratilgan?\n A) Voqealarga asoslangan arxitektura (EDA)",
    "117. Mikroservislar arxitekturasining asosiy afzalligi nimada?\n  A) Mustaqil xizmatlar orqali kengaytirilishi va moslashuvchanligi.\n\n118. Mijoz-server arxitekturasining qaysi komponenti xavfsizlik siyosatini amalga oshirish va resurslarga kirishni nazorat qilish uchun javobgardir?\n  A) Server\n \n119. Mijoz-server modelida mijoz odatda xizmat yoki resurs so'rash uchun server bilan qanday munosabatda bo'ladi?\n  A) Serverga so'rov xabarini yuboradi\n120. Mijoz-server arxitekturasining peer-to-peer tarmog'iga nisbatan asosiy afzalligi nimada?\nA) Resurslarni markazlashtirilgan boshqarish va nazorat qilish\n121. Mijoz-server modelidagi serverlarga masofaviy kirish uchun odatda qaysi protokoldan foydalaniladi?\nA) SSH (Secure Shell)",
    "122. Mijoz-server arxitekturasida server odatda qayta ishlash va saqlash nuqtai nazaridan qanday rol o'ynaydi?\n  A) Xizmatlarni taqdim etadi va mijozlar so'rovlarini qayta ishlaydi\n  123. Mijoz-server modelida serverning asosiy javobgarligi nimadan iborat?\n  A) Mijozlarning so'rovlariga javob bering va xizmatlar yoki resurslarni taqdim eting\n  124. Mijoz-server modelida veb-sahifalarni ko'rish uchun qaysi protokol odatda qo'llaniladi?\n  A) HTTP (Hypertext Transfer Protocol)\n  125. Mijoz-server arxitekturasi resurslarni boshqarish nuqtai nazaridan qanday afzalliklarga ega?\n  A) Resurslarni markazlashtirilgan nazorat qilish va boshqarish\n  126. Quyidagilardan qaysi biri mijoz-server modelidagi mijozga xos xususiyatdir?\n  A) Serverga so'rovlar yuboradi\n  127. Mijoz-server arxitekturasida qaysi komponent tarmoq trafigini boshqaradi va so'rovlarni tegishli serverga yo'naltiradi?\n  A) Load balancer",
    "128. Mijoz va server o'rtasidagi elektron pochta aloqasi uchun qanday protokol odatda qo'llaniladi?\n  A) POP3 (Post Office Protocol 3)\n  129. Quyidagilardan qaysi biri mijoz-server munosabatlarini eng yaxshi tavsiflaydi?\n  A) Mijozlar xizmatlar va resurslarni taqdim etish uchun serverlarga tayanadi\n  130. Mijoz-server modelida mijoz odatda qayta ishlash va saqlash nuqtai nazaridan qanday rol o'ynaydi?\n  A) Xizmatlarni so'rang va server javoblarini qayta ishlang\n  131. Mijoz-server arxitekturasining qaysi komponenti mijozlarga xizmatlar yoki resurslarni joylashtirish va taqdim etish uchun javobgardir?\n  A) Serve",
    "132. Voqealarga asoslangan arxitekturada voqea manbalarining roli qanday?\n  A) Doimiy hodisalar va ularni haqiqat manbai sifatida ishlatish.\n  133. Voqealarga asoslangan arxitekturada Apache Kafka yoki RabbitMQ kabi voqealarga asoslangan xabar almashish tizimidan foydalanishning asosiy sababi nima?\n  A) Ishonchli voqea aloqasi va miqyoslanishini ta'minlash.\n  134. Qaysi turdagi test voqealarga asoslangan arxitekturadan foydalanish qulayligi va qulayligini sinab ko'rishga qaratilgan?\n  A) Foydalanish testi.\n  135. Voqealarga asoslangan arxitektura real vaqtda ma'lumotlarni qayta ishlash va tahlil qilishni qanday qo'llab-quvvatlaydi?\n  A) Hodisalarni asinxron qayta ishlash orqali.\n  136. Voqealarga asoslangan arxitekturada(Event-Driven) voqealarni qabul qilish va qayta ishlash uchun qaysi komponent javobgar?\n  A) Event iste'molchisi.\n  137. Qaysi turdagi test voqealarga asoslangan(Event-Driven) arxitekturaning xavfsizlik choralari va zaif tomonlariga qaratilgan?\n  A) Xavfsizlik testi.",
    "138. Voqealarga asoslangan arxitekturada voqealarga asoslangan(Event-Driven) ish oqimlarining maqsadi nima?\n  A) Hodisalar va harakatlar oqimini tartibga solish.\n  139. Qaysi turdagi sinovlar turli xil yuk sharoitlarida voqealarga asoslangan(Event-Driven)  arxitekturaning ishlashi va sezgirligiga e'tibor qaratadi?\n  A) Ishlash testi.\n  140. Voqealarga asoslangan(Event-Driven) arxitekturada hodisa ishlab chiqaruvchilari va voqea iste'molchilari o'rtasida odatda qanday aloqa turi qo'llaniladi?\n  A) Asinxron aloqa.\n  141. Voqealarga asoslangan(Event-Driven) arxitektura ko'pincha qaysi me'moriy uslub bilan taqqoslanadi?\n  A) Xizmatga yo'naltirilgan arxitektura (SO.\n  142. Qaysi turdagi test voqealarga asoslangan(Event-Driven) arxitekturada bir nechta komponentlar yoki tizimlar o'rtasidagi o'zaro ta'sirni sinab ko'rishga qaratilgan?\n  A) Integratsiya testi.",
    "143. Voqealarga asoslangan(Event-Driven)  arxitekturada voqea avtobusi yoki xabar brokerining roli qanday?\n  A) Bu ishlab chiqaruvchilar va iste'molchilar o'rtasidagi voqealar aloqasini osonlashtiradi.\n  144. Voqealarga asoslangan arxitekturada voqealarni yaratish va nashr etish uchun qaysi komponent javobgar?\n  A) Voqealar prodyuseri.\n  145. Voqealarga asoslangan arxitekturani qabul qilishning asosiy foydasi nimada?\n  A) Kengaytirilganlik va sezgirlik yaxshilandi.\n  146. Voqealarga asoslangan arxitektura (ED) nima?\n  A) Voqealar va hodisalarni ishlovchilarga tayanadigan dasturiy ta'minot arxitekturasi.",
    "147. Microkernel (plagin) arxitekturasining asosiy g'oyasi ...\n  A) tizimingizning muhim imkoniyatlarini bitta mustaqil bajariladigan faylga joylashtirish uchun.\n  148. Berilgan javobni mikro-kernelga asoslangan misolni aniqlang?\n  A) Mac OS X\n  149. qaysi javobda mikro-kernel arxitekturasidan foydalanadigan dastur tur keltirilgan?\n  A) Internet-brauzer\n  150. Qaysi javobda mikroyadro arxitektura komponentlari keltirilgan?\n  A) Asosiy tizim, Plug-in komponenti\n  151. Mikrokernel arxitekturasi nechta komponentdan iborat?\n  A) 2",
    "152. Mikrokernel arxitekturasi yana qanday nom bilan ataladi?\n  A) Plug-in\n  153. Broker arxitektura patternida mijoz ilovalarining maqsadi nima?\n  A) Brokerga so'rovlarni qayta ishlash uchun yuborish\n  154. Quyidagilardan qaysi biri broker arxitektura naqshidan foydalanishning afzalligi hisoblanadi?\n  A) Ko'proq brokerlarni qo'shish orqali kengaytirilgan miqyoslilik\n  155. Broker arxitektura patterni komponentlar orasidagi bo'shashmasdan bog'lanishga qanday yordam beradi?\n  A) Xabarga asoslangan aloqa modeliga tayangan holda\n  156. Quyidagilardan qaysi biri brokerning arxitektura patternidagi rolini eng yaxshi tavsiflaydi?\n  A) barcha aloqalar uchun markazlashtirilgan markaz vazifasini bajaradi.\n  157. Quyidagi patternlarning qaysi biri mijoz nomidan maqsadli hodisalarga javoban vazifalarni bajarish uchun maqsad bilan ro'yxatdan o'tadigan misolni yaratadigan mijozni o'z ichiga oladi?\n  A) Reaktor",
    "158. Quyidagi patternlarning qaysi biri yetkazib beruvchidan xizmatga muhtoj bo'lgan mijozni ko'rsatadi, ammo etkazib beruvchining bevosita mijozga xizmat ko'rsatishida qandaydir muammo bor?\n  A) Broker\n  159. Quyidagilardan qaysi biri mid-level dizayn patternlariga tegishli emas?\n  A) Iterator\n  160. ASP.Net MVC yordamida nihoyat qaysi filtr bajariladi?\n  A) Istisno filtrlari\n  161. MVCda nechta turdagi natijalar mavjud?\n  A) 12\n  162. Model-view-controller-da (MVarchitecture, model _____________ ni belgilaydi.\n  A) Biznes-mantiqiy qatlam",
    "163. MVC uchta komponentdan iborat. Bular?\n  A) Model View Controller \n  164. Event-bus patterni haqida quyidagi fikrlardan qaysi biri to‘g‘ri?\n  A) sinxron va asinxron hodisalar aloqasini qo'llab-quvvatlaydi.\n  165. Event-avtobus patternidan foydalanishning asosiy afzalligi nimada?\n  A) Bu Eventlarni boshqarishning murakkabligini kamaytiradi va komponentlarni ajratadi.\n  166. Event-avtobus patterni qanday?\n  A) Markaziy voqea avtobusi orqali komponentlar o'rtasida aloqa o'rnatish imkonini beruvchi xabar almashish namunasi.",
    "167. Qaysi dastur yetkazib berish kafolati haqida qayg'urmaydi?\n  A) i1\n  168. i2 amalga oshirishda qaysi aktyor qabul qilingan eventni saqlashga yordam beradi?\n  A) event store\n  169. i3 va i4 ilovalarida hodisa turiga mos kelish uchun qanday asinxron usul qo'llaniladi?\n  A) blocking \n  170. Asl event ma'lumotlariga asosan mos yozuvlar ma'lumotlari nima?\n  A) Event shadow\n  171. Event-bus nechta event jarayonlarini o'z ichiga oladi?\n  A) 5\n  172. Raqamli egizak tizimda ma'lumotlarni real vaqtda sinxronlashtirishni ta'minlash uchun qaysi omil hal qiluvchi ahamiyatga ega?\n  A) Tarmoqning kechikishi\n  173. Qaysi arxitektura yondashuvi real vaqtda raqamli egizak tizimda xatolarga chidamlilik va chidamlilikni taklif qiladi?\n  A) Markazlashtirilmagan arxitektura",
    "174. Ma'lumotlar tahlili real vaqtda raqamli egizak tizimlarda qanday rol o'ynaydi?\n  A) Haqiqiy vaqtda tahlil qilish va tushunchalarni yaratish\n  175. Quyidagilardan qaysi biri real vaqtda raqamli egizak tizimlarni loyihalash bilan bog'liq muammo emas?\n  A) Tarixiy tahlil uchun ma'lumotlarni saqlashni optimallashtirish\n  176. Raqamli egizak tizimlarda real vaqtda ma'lumotlarni uzatish uchun qaysi texnologiya odatda qo'llaniladi?\n  A) MQTT\n  177. Arxitekturaning qaysi turi real vaqt rejimida raqobatlashadigan raqamli egizak tizim uchun eng mos keladi?\n  A) Edge hisoblash arxitekturasi\n  178. Haqiqiy vaqtda raqamli egizak tizimni loyihalashda qaysi omil e'tiborga olinmaydi?\n  A) Tarixiy ma'lumotlarni saqlash\n  179. Kam kechikish va real vaqtda javob talab qiladigan ilovalar uchun qaysi meʼmoriy yondashuv eng mos keladi?\n  A) Mikroservislar arxitekturasi\n  180. Haqiqiy vaqtda raqamli egizak tizimlar uchun bulutga asoslangan arxitekturaning asosiy afzalligi nimada?\n  A) Masshtablilik",
    "181. Haqiqiy vaqtda raqamli egizak tizimlar arxitekturani talab qiladi:\n  A) Kechikish\n  182. Quyidagi iboralarning qaysi biri raqamli egizakni yaxshiroq belgilaydi?\n  A) IoT orqali ulangan jismoniy aktivning real vaqt rejimidagi nusxasi\n  183. Domenga asoslangan dizayndagi qaysi kontseptsiya biznes qoidalarini qamrab olish va amalga oshirish uchun ishlatiladi?\n  A) Qiymat obyekti\n  184. Domenga asoslangan dizayndagi agregatlarning maqsadi nima?\n  A) Tizimlilikni ta'minlash va biznes qoidalarini qamrab olish\n  185. Domenga asoslangan dizayndagi omborning roli qanday?\n  A) Ma'lumotlar bazasi so'rovlari va yangilanishlarini boshqarish uchun\n  186. Quyidagilardan qaysi biri domenga asoslangan dizayndagi domen hodisasiga misoldir?\n  A) Mijoz ro'yxatdan o'tgan voqea\n  187. Domenga asoslangan dizayndagi agregat nima?\n  A) Yagona birlik sifatida qaraladigan o'zaro bog'liq ob'ektlar guruhi",
    "188. Domenga asoslangan(Domain-Driven) dizaynda qaysi me'moriy pattern odatda qo'llaniladi?\n  A) Qatlamli arxitektura\n  189. Domenga asoslangan dizayndagi Ubiquitous tilning maqsadi nima?\n  A) Ishlab chiquvchilar va domen ekspertlari o'rtasida umumiy tilni o'rnatish\n  190. Quyidagilardan qaysi biri domenga asoslangan dizayndagi asosiy tushunchadir?\n  A) Entity\n  191. Domenga asoslangan dizayn nima?\n  A) Dasturiy ta'minotni ishlab chiqish metodologiyasi\n  192. Qat'iylik qatlami nima qilish kerak\n  A) Qat'iylik qatlami texnik ishlarni bajarish uchun mas'ul bo'lgan barcha sinflarni o'z ichiga oladi.\n  193. Qatlamli arxitektura odatda bir necha qatlamlardan iborat. Ular nechta?\n  A) 4",
    "194. Qatlamlar orasidagi bog'lanish qanday?\n  A) Yuqoridan pastga\n  195. Qatlamli arxitektura nimadan yasalgan?\n  A) Qatlamlar\n  196. Multitier arxitekturasida ma'lumotlarga kirish qatlami nima?\n  A) qo'llab-quvvatlash uchun zarur bo'lgan doimiy qatlam, jurnallar, tarmoq va boshqa xizmatlar\n  197. Multitier arxitekturasida biznes qatlami nima?\n  A) biznes mantiqiy qatlami (BLL), domen mantiqiy qatlami",
    "198. Ko'p qatlamli arxitekturada dastur qatlami nima?\n  A) xizmat qatlami yoki Controller qatlami\n  199. Multitier arxitekturasining kamchiliklari qanday?\n  A) Boshqarish uchun qulay emas va ko'plab serverlarni talab qiladi\n  200. Qaysi pattern murakkab tilni qayta ishlash uchun Interpreter naqshiga muqobil bo'ladi?\n  A) Mehmon patterni",
  ];

  const search = req.params.search;

  const result = data.filter((item) =>
    includes(toLower(item), toLower(search))
  );
  res.status(200).send(result);
};

module.exports = {
  fintQuestion,
};
